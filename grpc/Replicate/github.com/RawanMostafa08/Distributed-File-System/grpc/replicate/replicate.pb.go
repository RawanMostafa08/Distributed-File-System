// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: Replicate/replicate.proto

package replicate

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MachineDataTransferRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSrc         string                 `protobuf:"bytes,1,opt,name=is_src,json=isSrc,proto3" json:"is_src,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineDataTransferRequest) Reset() {
	*x = MachineDataTransferRequest{}
	mi := &file_Replicate_replicate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineDataTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineDataTransferRequest) ProtoMessage() {}

func (x *MachineDataTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Replicate_replicate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineDataTransferRequest.ProtoReflect.Descriptor instead.
func (*MachineDataTransferRequest) Descriptor() ([]byte, []int) {
	return file_Replicate_replicate_proto_rawDescGZIP(), []int{0}
}

func (x *MachineDataTransferRequest) GetIsSrc() string {
	if x != nil {
		return x.IsSrc
	}
	return ""
}

type MachineDataTransferResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ack           string                 `protobuf:"bytes,1,opt,name=ack,proto3" json:"ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineDataTransferResponse) Reset() {
	*x = MachineDataTransferResponse{}
	mi := &file_Replicate_replicate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineDataTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineDataTransferResponse) ProtoMessage() {}

func (x *MachineDataTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Replicate_replicate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineDataTransferResponse.ProtoReflect.Descriptor instead.
func (*MachineDataTransferResponse) Descriptor() ([]byte, []int) {
	return file_Replicate_replicate_proto_rawDescGZIP(), []int{1}
}

func (x *MachineDataTransferResponse) GetAck() string {
	if x != nil {
		return x.Ack
	}
	return ""
}

type FileToCopyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileData      string                 `protobuf:"bytes,1,opt,name=file_data,json=fileData,proto3" json:"file_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileToCopyRequest) Reset() {
	*x = FileToCopyRequest{}
	mi := &file_Replicate_replicate_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileToCopyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileToCopyRequest) ProtoMessage() {}

func (x *FileToCopyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Replicate_replicate_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileToCopyRequest.ProtoReflect.Descriptor instead.
func (*FileToCopyRequest) Descriptor() ([]byte, []int) {
	return file_Replicate_replicate_proto_rawDescGZIP(), []int{2}
}

func (x *FileToCopyRequest) GetFileData() string {
	if x != nil {
		return x.FileData
	}
	return ""
}

type FileToCopyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ack           string                 `protobuf:"bytes,1,opt,name=ack,proto3" json:"ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileToCopyResponse) Reset() {
	*x = FileToCopyResponse{}
	mi := &file_Replicate_replicate_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileToCopyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileToCopyResponse) ProtoMessage() {}

func (x *FileToCopyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Replicate_replicate_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileToCopyResponse.ProtoReflect.Descriptor instead.
func (*FileToCopyResponse) Descriptor() ([]byte, []int) {
	return file_Replicate_replicate_proto_rawDescGZIP(), []int{3}
}

func (x *FileToCopyResponse) GetAck() string {
	if x != nil {
		return x.Ack
	}
	return ""
}

var File_Replicate_replicate_proto protoreflect.FileDescriptor

const file_Replicate_replicate_proto_rawDesc = "" +
	"\n" +
	"\x19Replicate/replicate.proto\x12\treplicate\"3\n" +
	"\x1aMachineDataTransferRequest\x12\x15\n" +
	"\x06is_src\x18\x01 \x01(\tR\x05isSrc\"/\n" +
	"\x1bMachineDataTransferResponse\x12\x10\n" +
	"\x03ack\x18\x01 \x01(\tR\x03ack\"0\n" +
	"\x11FileToCopyRequest\x12\x1b\n" +
	"\tfile_data\x18\x01 \x01(\tR\bfileData\"&\n" +
	"\x12FileToCopyResponse\x12\x10\n" +
	"\x03ack\x18\x01 \x01(\tR\x03ack2\xc1\x01\n" +
	"\x03DFS\x12q\n" +
	" NotifyMachineDataTransferService\x12%.replicate.MachineDataTransferRequest\x1a&.replicate.MachineDataTransferResponse\x12G\n" +
	"\bCopyFile\x12\x1c.replicate.FileToCopyRequest\x1a\x1d.replicate.FileToCopyResponseBBZ@github.com/RawanMostafa08/Distributed-File-System/grpc/replicateb\x06proto3"

var (
	file_Replicate_replicate_proto_rawDescOnce sync.Once
	file_Replicate_replicate_proto_rawDescData []byte
)

func file_Replicate_replicate_proto_rawDescGZIP() []byte {
	file_Replicate_replicate_proto_rawDescOnce.Do(func() {
		file_Replicate_replicate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Replicate_replicate_proto_rawDesc), len(file_Replicate_replicate_proto_rawDesc)))
	})
	return file_Replicate_replicate_proto_rawDescData
}

var file_Replicate_replicate_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_Replicate_replicate_proto_goTypes = []any{
	(*MachineDataTransferRequest)(nil),  // 0: replicate.MachineDataTransferRequest
	(*MachineDataTransferResponse)(nil), // 1: replicate.MachineDataTransferResponse
	(*FileToCopyRequest)(nil),           // 2: replicate.FileToCopyRequest
	(*FileToCopyResponse)(nil),          // 3: replicate.FileToCopyResponse
}
var file_Replicate_replicate_proto_depIdxs = []int32{
	0, // 0: replicate.DFS.NotifyMachineDataTransferService:input_type -> replicate.MachineDataTransferRequest
	2, // 1: replicate.DFS.CopyFile:input_type -> replicate.FileToCopyRequest
	1, // 2: replicate.DFS.NotifyMachineDataTransferService:output_type -> replicate.MachineDataTransferResponse
	3, // 3: replicate.DFS.CopyFile:output_type -> replicate.FileToCopyResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_Replicate_replicate_proto_init() }
func file_Replicate_replicate_proto_init() {
	if File_Replicate_replicate_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Replicate_replicate_proto_rawDesc), len(file_Replicate_replicate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Replicate_replicate_proto_goTypes,
		DependencyIndexes: file_Replicate_replicate_proto_depIdxs,
		MessageInfos:      file_Replicate_replicate_proto_msgTypes,
	}.Build()
	File_Replicate_replicate_proto = out.File
	file_Replicate_replicate_proto_goTypes = nil
	file_Replicate_replicate_proto_depIdxs = nil
}
